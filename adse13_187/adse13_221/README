Artifacts for testing the code.

1. tst_lunus.py, a driver to test lunus_wrap.py.  Get lunus-assimilation background + strong spot mask

Full command line:
srun -n1 -c10 libtbx.python lunus_wrap.py trusted_mask=<mask> refl=<strong spots> expt=<imageset/detector> output.label=<token> output.index=0

2. runner.sh, a driver to test basic_runner.py.  Make a rudimentary nanoBragg simulation based on a dxtbx crystal model and compare with experiment.

Full command line:
srun -n1 -c10 libtbx.python basic_runner.py \
trusted_mask=*.mask \
cryst=<path to dials experiment with refined crystal model>.expt \
refl=<path to reindexed and curated strong spots>.refl \
expt=<path to imageset with detector and beam>.expt \
output.label=ru output.index=0 model.mosaic_spread=0.0 model.Nabc=130,30,10
